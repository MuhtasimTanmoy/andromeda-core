{
  "contract_name": "andromeda-message-bridge",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "properties": {
      "pauser": {
        "description": "Address that may pause the contract. PAUSER may pause the contract a single time; in pausing the contract they burn the right to do so again. A new pauser may be later nominated by the CosmWasm level admin via a migration.",
        "type": [
          "string",
          "null"
        ]
      },
      "proxy": {
        "anyOf": [
          {
            "$ref": "#/definitions/ContractInstantiateInfo"
          },
          {
            "type": "null"
          }
        ]
      }
    },
    "additionalProperties": false,
    "definitions": {
      "Admin": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "address"
            ],
            "properties": {
              "address": {
                "type": "object",
                "required": [
                  "addr"
                ],
                "properties": {
                  "addr": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "instantiator"
            ],
            "properties": {
              "instantiator": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "ContractInstantiateInfo": {
        "type": "object",
        "required": [
          "code_id",
          "label",
          "msg"
        ],
        "properties": {
          "admin": {
            "anyOf": [
              {
                "$ref": "#/definitions/Admin"
              },
              {
                "type": "null"
              }
            ]
          },
          "code_id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "label": {
            "type": "string"
          },
          "msg": {
            "$ref": "#/definitions/Binary"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Receives a NFT to be IBC transfered away. The `msg` field must be a binary encoded `IbcOutgoingMsg`.",
        "type": "object",
        "required": [
          "receive_message"
        ],
        "properties": {
          "receive_message": {
            "type": "object",
            "required": [
              "outgoing_msg",
              "target",
              "user_msg"
            ],
            "properties": {
              "outgoing_msg": {
                "$ref": "#/definitions/Binary"
              },
              "target": {
                "type": "string"
              },
              "user_msg": {
                "$ref": "#/definitions/Binary"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Mesages used internally by the contract. These may only be called by the contract itself.",
        "type": "object",
        "required": [
          "callback"
        ],
        "properties": {
          "callback": {
            "$ref": "#/definitions/CallbackMsg"
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "receive_proxy_nft"
        ],
        "properties": {
          "receive_proxy_nft": {
            "type": "object",
            "required": [
              "eyeball",
              "msg"
            ],
            "properties": {
              "eyeball": {
                "type": "string"
              },
              "msg": {
                "$ref": "#/definitions/Cw721ReceiveMsg"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "CallbackMsg": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "handle_packet_receive"
            ],
            "properties": {
              "handle_packet_receive": {
                "type": "object",
                "required": [
                  "msg",
                  "receiver"
                ],
                "properties": {
                  "msg": {
                    "description": "The message for the target contract.",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  },
                  "receiver": {
                    "description": "The target contract's address.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Cw721ReceiveMsg": {
        "description": "Cw721ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
        "type": "object",
        "required": [
          "msg",
          "sender",
          "token_id"
        ],
        "properties": {
          "msg": {
            "$ref": "#/definitions/Binary"
          },
          "sender": {
            "type": "string"
          },
          "token_id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "type": "string",
    "enum": []
  },
  "migrate": null,
  "sudo": null,
  "responses": {}
}
